<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Coding, Coding, Coding]]></title>
  <link href="http://linc01n.github.com/atom.xml" rel="self"/>
  <link href="http://linc01n.github.com/"/>
  <updated>2013-05-25T23:36:08+08:00</updated>
  <id>http://linc01n.github.com/</id>
  <author>
    <name><![CDATA[Lincoln Lee]]></name>
    <email><![CDATA[git@lincoln.hk]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Softether on VPS using local bridge]]></title>
    <link href="http://linc01n.github.com/blog/2013/05/17/softether-on-vps-using-local-bridge/"/>
    <updated>2013-05-17T19:00:00+08:00</updated>
    <id>http://linc01n.github.com/blog/2013/05/17/softether-on-vps-using-local-bridge</id>
    <content type="html"><![CDATA[<p>This post continues on the last post about <a href="http://linc01n.github.io/blog/2013/03/19/softether-on-vps/">Softether setup on a VPS</a>.</p>

<h3>Problem on SecureNAT</h3>

<p>SecureNAT is a fairly simple way to setup Softether. You don&#8217;t need a lot of sysadmin skill and network understanding in order to get Softether up and running.</p>

<p>The problem is SecureNAT is a bit <strong>SLOW</strong>. I will show a comparison at the end of this article.</p>

<p>We can boost the performance using a local bridge.</p>

<h3>Softether using local bridge</h3>

<p>To start with you need Softether installed and setup. You can follow the guide on <a href="http://linc01n.github.io/blog/2013/03/19/softether-on-vps/">Softether on VPS</a></p>

<p>Just skip the last step &#8220;Enable the Virtual NAT&#8221;</p>

<h3>Local bridge Setup</h3>

<blockquote><p><strong>Network setup</strong></p>

<p>VPN Server IP: 192.168.7.1</p>

<p>VPN Client IP Range: 192.168.7.50-192.168.7.60</p>

<p>Tap Device name: tap_soft</p></blockquote>

<p>From here we go to the &#8220;Local Bridge Setting&#8221;</p>

<p><img src="http://linc01n.github.com/images/softether_local_bridge/local-bridge-setting.png" alt="Local Bridge Setting" /></p>

<p>First we choose the Virtual Hub. It should be only one for normal setup.</p>

<p>Then we check the tap device box.</p>

<p>After that we type in the name of the tap device(I use soft here for simplicity).</p>

<p><img src="http://linc01n.github.com/images/softether_local_bridge/create-local-bridge.png" alt="Create Local Bridge" /></p>

<p>After the creation of the local bridge we jump back to our server. And run</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># ifconfig tap_soft </span></code></pre></td></tr></table></div></figure>


<p>It should show you something similar to this</p>

<p><img src="http://linc01n.github.com/images/softether_local_bridge/check-on-the-sever.png" alt="Check on the server" /></p>

<p>Because we are not going to use SecureNAT and SecureDHCP. We need to install a DHCP server on our VPS. We are going to use dnsmasq as our DHCP server.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># apt-get install dnsmasq</span></code></pre></td></tr></table></div></figure>


<p>Now edit the /etc/dnsmasq.conf file. Add these 3 lines at the end.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>interface=tap_soft
</span><span class='line'>dhcp-range=tap_soft,192.168.7.50,192.168.7.60,12h
</span><span class='line'>dhcp-option=tap_soft,3,192.168.7.1</span></code></pre></td></tr></table></div></figure>


<p>The above 3 lines are used to enable the dhcp server on interface tap_soft.</p>

<p>Next step we need a new set of init script which will config tap interface for us when Softether start up.</p>

<figure class='code'><figcaption><span>/etc/init.d/vpnserver  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/sh</span>
</span><span class='line'><span class="c">### BEGIN INIT INFO</span>
</span><span class='line'><span class="c"># Provides:          vpnserver</span>
</span><span class='line'><span class="c"># Required-Start:    $remote_fs $syslog</span>
</span><span class='line'><span class="c"># Required-Stop:     $remote_fs $syslog</span>
</span><span class='line'><span class="c"># Default-Start:     2 3 4 5</span>
</span><span class='line'><span class="c"># Default-Stop:      0 1 6</span>
</span><span class='line'><span class="c"># Short-Description: Start daemon at boot time</span>
</span><span class='line'><span class="c"># Description:       Enable Softether by daemon.</span>
</span><span class='line'><span class="c">### END INIT INFO</span>
</span><span class='line'><span class="nv">DAEMON</span><span class="o">=</span>/usr/local/vpnserver/vpnserver
</span><span class='line'><span class="nv">LOCK</span><span class="o">=</span>/var/lock/subsys/vpnserver
</span><span class='line'><span class="nv">TAP_ADDR</span><span class="o">=</span>192.168.7.1
</span><span class='line'>
</span><span class='line'><span class="nb">test</span> -x <span class="nv">$DAEMON</span> <span class="o">||</span> <span class="nb">exit </span>0
</span><span class='line'><span class="k">case</span> <span class="s2">&quot;$1&quot;</span> in
</span><span class='line'>start<span class="o">)</span>
</span><span class='line'><span class="nv">$DAEMON</span> start
</span><span class='line'>touch <span class="nv">$LOCK</span>
</span><span class='line'>sleep 1
</span><span class='line'>/sbin/ifconfig tap_soft <span class="nv">$TAP_ADDR</span>
</span><span class='line'>;;
</span><span class='line'>stop<span class="o">)</span>
</span><span class='line'><span class="nv">$DAEMON</span> stop
</span><span class='line'>rm <span class="nv">$LOCK</span>
</span><span class='line'>;;
</span><span class='line'>restart<span class="o">)</span>
</span><span class='line'><span class="nv">$DAEMON</span> stop
</span><span class='line'>sleep 3
</span><span class='line'><span class="nv">$DAEMON</span> start
</span><span class='line'>sleep 1
</span><span class='line'>/sbin/ifconfig tap_soft <span class="nv">$TAP_ADDR</span>
</span><span class='line'>;;
</span><span class='line'>*<span class="o">)</span>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;Usage: $0 {start|stop|restart}&quot;</span>
</span><span class='line'><span class="nb">exit </span>1
</span><span class='line'><span class="k">esac</span>
</span><span class='line'><span class="nb">exit </span>0
</span></code></pre></td></tr></table></div></figure>


<p>Then we need to enable NAT on linux server.</p>

<p>Add this file to /etc/sysctl.d/ to enable ipv4 forwarding.</p>

<figure class='code'><figcaption><span>/etc/sysctl.d/ipv4_forwarding.conf  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>net.ipv4.ip_forward <span class="o">=</span> 1
</span></code></pre></td></tr></table></div></figure>


<p>Apply the sysctl run</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># sysctl --system</span></code></pre></td></tr></table></div></figure>


<p>Then we add a POSTROUTING rule to iptables</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># iptables -t nat -A POSTROUTING -s 192.168.7.0/24 -j SNAT --to-source [YOUR VPS IP ADDRESS]</span></code></pre></td></tr></table></div></figure>


<p>To make our iptables rule survive after reboot install <code>iptables-persistent</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># apt-get install iptables-persistent</span></code></pre></td></tr></table></div></figure>


<p>After all the above setting, restart the vpnserver then we are good to go.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># /etc/init.d/vpnserver restart
</span><span class='line'># /etc/init.d/dnsmasq restart</span></code></pre></td></tr></table></div></figure>


<p>Comparison on SecureNAT and local bridge method.</p>

<p><img src="http://linc01n.github.com/images/softether_local_bridge/l2tp_bridge.png" alt="Speed test on local bridge" />
<img src="http://linc01n.github.com/images/softether_local_bridge/l2tp_SecureNAT.png" alt="Speed test on SecureNAT" /></p>

<h3>Conclusion</h3>

<p>Local bridge use far less CPU resources than SecureNAT. It is a bit trouble to setup but I think it is worth to use local bridge.</p>

<p>I would recommend <a href="https://clientarea.ramnode.com/aff.php?aff=319">Ramnode</a> as a VPS provider. Their VPS is speedy and support is amazing.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Load testing on sqale.jp single container for static page]]></title>
    <link href="http://linc01n.github.com/blog/2013/03/24/load-testing-on-sqale-dot-jp-single-container-for-static-page/"/>
    <updated>2013-03-24T12:49:00+08:00</updated>
    <id>http://linc01n.github.com/blog/2013/03/24/load-testing-on-sqale-dot-jp-single-container-for-static-page</id>
    <content type="html"><![CDATA[<p>I met with some amazing developers from <a href="https://sqale.jp">Sqale.jp</a> when I attent <a href="http://rubyconf.tw/2012/">Ruby Conf TW 2012</a> last year.</p>

<p>Sqale is a japanese company compete with <a href="http://www.heroku.com/">Heroku</a> to provide developer friendly platform to host rails app.</p>

<p>Sqale is addressing some of the problems Heroku.</p>

<ol>
<li>Server location - Heroku servers are in US which is quite far away if the target audience are in APAC area.</li>
<li>SSH access

<blockquote><p>Since your app is spread across many dynos in the dyno manifold, there is no single place to SSH into. You deploy and manage apps, not servers.<a href="https://devcenter.heroku.com/articles/one-off-dynos#ssh-access">ref</a></p></blockquote></li>
<li>Slug size - Heroku limit it to a maximum 200MB.</li>
</ol>


<p>Sqale provides server in Tokyo and gives developer a LXC container to work with. You can run cron job on Sqale without any changes if you migrate from dedicate server. So the platform dependent is lesser than Heroku.</p>

<p>For slug size, Sqale do not have a concept of slug. They give you 2GB of disk space for one container.</p>

<h3>Pricing model</h3>

<p>Sqale is charge by number of containers. Each one is ¥940 per month which is around 10USD.</p>

<h2>How powerful is one container?</h2>

<p>I am still testing out Sqale. Before I use Sqale in production I need to know what&#8217;s my operation cost.</p>

<h3>Deploy a sample app</h3>

<p>I always want to try out <a href="https://github.com/github/swordfish">Swordfish</a>. So I deployed it to sqale. The process is not too hard. But therer are lack of english documentation. I can only just guess what the console mean and try my best. Support from sqale is really helpful.</p>

<h3>Static file test</h3>

<p>I don&#8217;t want to test dynamic content yet. So I created a blank index.html in public/ directory and see how their nginx perform.</p>

<h4>10 concurrent request warmup for 60 second</h4>

<div style="width: 600px;">
<iframe  style="overflow: hidden;" scrolling="no" width='600' height='300' frameborder='0' src='http://linc01n.github.com//share.loader.io/results/9fc6e5f2ac4f708b91a86095c13d8762/widget'></iframe>
<div style="width: 100%; text-align: right;">
<a href="http://loader.io/results/9fc6e5f2ac4f708b91a86095c13d8762" target="_blank"  style="padding: 0 10px 10px 0; font-family: Arial, 'Helvetica Neue', Helvetica, sans-serif; font-size: 14px;">View on loader.io</a>
</div></div>


<p></p>

<p>No error and response is steady.</p>

<h4>1000 concurrent request for 300 second</h4>

<div style="width: 600px;">
<iframe style="overflow: hidden;" scrolling="no" width='600' height='300' frameborder='0' src='http://linc01n.github.com//share.loader.io/results/36216016f1884328b0b0e71451adcc37/widget'></iframe>
<div style="width: 100%; text-align: right;">
<a href="http://loader.io/results/36216016f1884328b0b0e71451adcc37" target="_blank"  style="padding: 0 10px 10px 0; font-family: Arial, 'Helvetica Neue', Helvetica, sans-serif; font-size: 14px;">View on loader.io</a>
</div></div>


<h4>Conclusion</h4>

<p>First error start to occur when concurrent connection is about 815. The total error rate is 3% is not bad.
You can scale out by adding more container to your application. But from what I understand from their website seems you can only add 4 more containers to your app. So maximum is 5 containers per app. I am not sure it is a technical reason or you can add more by contacting Sqale.</p>

<p>It also seems that they will help you do some ddos mitigation behind the scene. After the c1k rush I cannot run a smaller test on it. All requests are timeout.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SoftEther on VPS]]></title>
    <link href="http://linc01n.github.com/blog/2013/03/19/softether-on-vps/"/>
    <updated>2013-03-19T19:06:00+08:00</updated>
    <id>http://linc01n.github.com/blog/2013/03/19/softether-on-vps</id>
    <content type="html"><![CDATA[<p>I saw a post on <a href="http://www.lowendtalk.com/discussion/8783/softether-very-powerful-easy-to-use-multi-protocol-vpn-software">lowendtalk</a> last week introducing a new piece of vpn software call SoftEther.</p>

<h3>What is <a href="http://www.softether.org/">SoftEther</a></h3>

<p>A Free Cross-platform Multi-protocol VPN program,
as an academic project from <a href="http://www.tsukuba.ac.jp/english/">University of Tsukuba</a>.</p>

<p>It is a single server which support SSL-VPN (HTTPS) and 6 major VPN protocols (OpenVPN, IPsec, L2TP, MS-SSTP, L2TPv3 and EtherIP).</p>

<p>I would like to also highlight the <a href="http://www.softether.org/1-features/1._Ultimate_Powerful_VPN_Connectivity#1.6._VPN_over_ICMP.2C_and_VPN_over_DNS_(Awesome!)">VPN over ICMP and VPN over DNS</a> feature if you are inside a very strict network.</p>

<h3>VPS Setup Guide</h3>

<p>This post use SecureNAT. You may want to <a href="http://linc01n.github.io/blog/2013/05/17/softether-on-vps-using-local-bridge/">setup local bridge</a>.</p>

<blockquote><p>SoftEther author contacted me to highlight serveral points:</p>

<ul>
<li>On physical server, local bridge will perform better than SecureNAT</li>
<li><strong>DO NOT</strong> enable both local bridge and SecureNAT at the same time. Packets will loop infinitly and make your server <code>100%</code> CPU usage.</li>
</ul>
</blockquote>

<p>Requirement: VPS</p>

<p>I am using vps from buyvm. I got from a year deal which is USD12/year. I would recommend <a href="https://clientarea.ramnode.com/aff.php?aff=319">Ramnode</a> as a VPS provider. Their VPS is speedy and support is amazing.</p>

<ul>
<li>Spec:

<ul>
<li>RAM: 128MB</li>
<li>Burst: 256MB</li>
<li>Disk Space: 15GB</li>
<li>Bandwidth: 500GB</li>
<li>Location: Buffalo, USA</li>
</ul>
</li>
<li>OS:

<ul>
<li>Debian 6.0 64bit (minimal)</li>
</ul>
</li>
</ul>


<p>Make sure you login root as follow:</p>

<p><img src="http://linc01n.github.com/images/softether_vps/login.png" alt="login as root" /></p>

<p>Before installing SoftEther Server let us install some prerequisite.</p>

<figure class='code'><figcaption><span> (build_tools.sh)</span> <a href='http://linc01n.github.com/downloads/code/build_tools.sh'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>apt-get update
</span><span class='line'>apt-get install build-essential
</span></code></pre></td></tr></table></div></figure>


<p>Go to <a href="http://www.softether-download.com/en.aspx?product=softether">SoftEther</a> to download the server binary.</p>

<p><img src="http://linc01n.github.com/images/softether_vps/download_selection.png" alt="download selection" /></p>

<p>I am using Ver 1.00, Build 9029, rc2 in this tutorial.</p>

<p>After download, run</p>

<figure class='code'><figcaption><span> (make.sh)</span> <a href='http://linc01n.github.com/downloads/code/make.sh'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>tar zxf softether-vpnserver-v1.00-9029-rc2-2013.03.16-linux-x64-64bit.tar.gz
</span><span class='line'><span class="nb">cd </span>vpnserver
</span><span class='line'>make
</span></code></pre></td></tr></table></div></figure>


<p>Read the Agreement and press 1 three times.</p>

<p>Then we move the dir to /usr/local/</p>

<figure class='code'><figcaption><span> (install.sh)</span> <a href='http://linc01n.github.com/downloads/code/install.sh'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd</span> ..
</span><span class='line'>mv vpnserver /usr/local
</span><span class='line'><span class="nb">cd</span> /usr/local/vpnserver/
</span><span class='line'>chmod 600 *
</span><span class='line'>chmod 700 vpncmd
</span><span class='line'>chmod 700 vpnserver
</span><span class='line'>nano /etc/init.d/vpnserver
</span></code></pre></td></tr></table></div></figure>


<p>paste the following content to nano</p>

<figure class='code'><figcaption><span> (vpnserver.sh)</span> <a href='http://linc01n.github.com/downloads/code/vpnserver.sh'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c">#!/bin/sh</span>
</span><span class='line'><span class="c">### BEGIN INIT INFO</span>
</span><span class='line'><span class="c"># Provides:          vpnserver</span>
</span><span class='line'><span class="c"># Required-Start:    $remote_fs $syslog</span>
</span><span class='line'><span class="c"># Required-Stop:     $remote_fs $syslog</span>
</span><span class='line'><span class="c"># Default-Start:     2 3 4 5</span>
</span><span class='line'><span class="c"># Default-Stop:      0 1 6</span>
</span><span class='line'><span class="c"># Short-Description: Start daemon at boot time</span>
</span><span class='line'><span class="c"># Description:       Enable Softether by daemon.</span>
</span><span class='line'><span class="c">### END INIT INFO</span>
</span><span class='line'><span class="nv">DAEMON</span><span class="o">=</span>/usr/local/vpnserver/vpnserver
</span><span class='line'><span class="nv">LOCK</span><span class="o">=</span>/var/lock/subsys/vpnserver
</span><span class='line'><span class="nb">test</span> -x <span class="nv">$DAEMON</span> <span class="o">||</span> <span class="nb">exit </span>0
</span><span class='line'><span class="k">case</span> <span class="s2">&quot;$1&quot;</span> in
</span><span class='line'>start<span class="o">)</span>
</span><span class='line'><span class="nv">$DAEMON</span> start
</span><span class='line'>touch <span class="nv">$LOCK</span>
</span><span class='line'>;;
</span><span class='line'>stop<span class="o">)</span>
</span><span class='line'><span class="nv">$DAEMON</span> stop
</span><span class='line'>rm <span class="nv">$LOCK</span>
</span><span class='line'>;;
</span><span class='line'>restart<span class="o">)</span>
</span><span class='line'><span class="nv">$DAEMON</span> stop
</span><span class='line'>sleep 3
</span><span class='line'><span class="nv">$DAEMON</span> start
</span><span class='line'>;;
</span><span class='line'>*<span class="o">)</span>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;Usage: $0 {start|stop|restart}&quot;</span>
</span><span class='line'><span class="nb">exit </span>1
</span><span class='line'><span class="k">esac</span>
</span><span class='line'><span class="nb">exit </span>0
</span></code></pre></td></tr></table></div></figure>


<p>ctrl-o ret ctrl-x</p>

<p>After that we enable the service</p>

<figure class='code'><figcaption><span> (service.sh)</span> <a href='http://linc01n.github.com/downloads/code/service.sh'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>chmod 755 /etc/init.d/vpnserver
</span><span class='line'>mkdir /var/lock/subsys
</span><span class='line'>update-rc.d vpnserver defaults
</span><span class='line'>/etc/init.d/vpnserver start
</span><span class='line'><span class="nb">cd</span> /usr/local/vpnserver/
</span></code></pre></td></tr></table></div></figure>


<p>Then we need to do a checking.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>./vpncmd
</span><span class='line'>3
</span><span class='line'>check</span></code></pre></td></tr></table></div></figure>


<p>You should get 4 &#8220;Pass&#8221;.</p>

<p>We need to set the server admin password</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>./vpncmd
</span><span class='line'>1
</span><span class='line'>ret
</span><span class='line'>ret
</span><span class='line'>VPN Server&gt;ServerPasswordSet</span></code></pre></td></tr></table></div></figure>


<p>Enter the admin password.</p>

<p>I do the setting on a windows client.
It is running</p>

<p><img src="http://linc01n.github.com/images/softether_vps/server_manager.png" alt="server manager" /></p>

<p>Install it, run it, click New setting. Input ip and password.</p>

<p><img src="http://linc01n.github.com/images/softether_vps/setting.png" alt="input setting" /></p>

<p>Then connect to it.
On successful login, it will pop up Easy Setup</p>

<p><img src="http://linc01n.github.com/images/softether_vps/easy_setup.png" alt="easy setup" />
Check Remote Access Server and Next</p>

<p><img src="http://linc01n.github.com/images/softether_vps/warning.png" alt="warning" /></p>

<p>Yes</p>

<p><img src="http://linc01n.github.com/images/softether_vps/virtual_hub.png" alt="Virtual Hub name" /></p>

<p>OK</p>

<p><img src="http://linc01n.github.com/images/softether_vps/l2tp.png" alt="Setup L2TP" />
Check Enable L2TP Server Function and input your own pre-share key</p>

<p>OK</p>

<p><img src="http://linc01n.github.com/images/softether_vps/azure.png" alt="Azure" />
We disable Azure VPN</p>

<p><img src="http://linc01n.github.com/images/softether_vps/create_user.png" alt="Create User" /></p>

<p>Then we need to create a new user. This is trivial.</p>

<p><img src="http://linc01n.github.com/images/softether_vps/user.png" alt="User" /></p>

<p><img src="http://linc01n.github.com/images/softether_vps/manager.png" alt="Manager" />
Click on &#8220;Manage Virtual Hub&#8221;</p>

<p>Click on &#8220;Secure NAT&#8221; (If you want a faster connection we can refer to my 2nd post on <a href="http://linc01n.github.io/blog/2013/05/17/softether-on-vps-using-local-bridge/">softether</a>)</p>

<p><img src="http://linc01n.github.com/images/softether_vps/secure_nat.png" alt="Secure NAT" /></p>

<p>Enable the Virtual NAT</p>

<blockquote><p>Again <strong>DO NOT</strong> enable SecureNAT and local bridge at the same time!</p></blockquote>

<h3>Done</h3>

<p>You can try to connect to the vpn server through L2TP/IPSec.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Django Admin: Auto Select Current User]]></title>
    <link href="http://linc01n.github.com/blog/2011/10/18/django-admin-auto-select-current-user/"/>
    <updated>2011-10-18T17:38:00+08:00</updated>
    <id>http://linc01n.github.com/blog/2011/10/18/django-admin-auto-select-current-user</id>
    <content type="html"><![CDATA[<h2>Background</h2>

<p>There are often times in developing a CMS need to mark down who created the record. Django provide a nice admin interface for us. But when we only use the default, user need to select who they are by themselves. We want to auto select for them and they can&#8217;t pretend to be others.</p>

<h2>code</h2>

<p>In the django models.py, we have the following:</p>

<figure class='code'><figcaption><span>models.py  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">class</span> <span class="nc">Notes</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
</span><span class='line'>    <span class="n">title</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">255</span><span class="p">)</span>
</span><span class='line'>    <span class="n">content</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">TextField</span><span class="p">()</span>
</span><span class='line'>    <span class="n">date</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateField</span><span class="p">()</span>
</span><span class='line'>    <span class="n">created_by</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="n">User</span><span class="p">,</span> <span class="n">related_name</span><span class="o">=</span><span class="s">&quot;Created By&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>We want the created_by to be set automatically for the logged in user.</p>

<p>So in our admin:</p>

<figure class='code'><figcaption><span>admin  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">class</span> <span class="nc">NotesAdmin</span><span class="p">(</span><span class="n">admin</span><span class="o">.</span><span class="n">ModelAdmin</span><span class="p">):</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">formfield_for_foreignkey</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">db_field</span><span class="p">,</span> <span class="n">request</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">db_field</span><span class="o">.</span><span class="n">name</span> <span class="o">==</span> <span class="s">&#39;created_by&#39;</span><span class="p">:</span>
</span><span class='line'>            <span class="n">kwargs</span><span class="p">[</span><span class="s">&#39;queryset&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">User</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">filter</span><span class="p">(</span><span class="n">username</span><span class="o">=</span><span class="n">request</span><span class="o">.</span><span class="n">user</span><span class="o">.</span><span class="n">username</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span> <span class="nb">super</span><span class="p">(</span><span class="n">NotesAdmin</span><span class="p">,</span> <span class="bp">self</span><span class="p">)</span><span class="o">.</span><span class="n">formfield_for_foreignkey</span><span class="p">(</span><span class="n">db_field</span><span class="p">,</span> <span class="n">request</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">get_readonly_fields</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">request</span><span class="p">,</span> <span class="n">obj</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">obj</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
</span><span class='line'>            <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">readonly_fields</span> <span class="o">+</span> <span class="p">(</span><span class="s">&#39;created_by&#39;</span><span class="p">,)</span>
</span><span class='line'>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">readonly_fields</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">add_view</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">request</span><span class="p">,</span> <span class="n">form_url</span><span class="o">=</span><span class="s">&quot;&quot;</span><span class="p">,</span> <span class="n">extra_context</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
</span><span class='line'>        <span class="n">data</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">GET</span><span class="o">.</span><span class="n">copy</span><span class="p">()</span>
</span><span class='line'>        <span class="n">data</span><span class="p">[</span><span class="s">&#39;created_by&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">user</span>
</span><span class='line'>        <span class="n">request</span><span class="o">.</span><span class="n">GET</span> <span class="o">=</span> <span class="n">data</span>
</span><span class='line'>        <span class="k">return</span> <span class="nb">super</span><span class="p">(</span><span class="n">NotesAdmin</span><span class="p">,</span> <span class="bp">self</span><span class="p">)</span><span class="o">.</span><span class="n">add_view</span><span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="n">form_url</span><span class="o">=</span><span class="s">&quot;&quot;</span><span class="p">,</span> <span class="n">extra_context</span><span class="o">=</span><span class="n">extra_context</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">admin</span><span class="o">.</span><span class="n">site</span><span class="o">.</span><span class="n">register</span><span class="p">(</span><span class="n">Notes</span><span class="p">,</span> <span class="n">NotesAdmin</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>explanation</h2>

<p>The add_view function help us to select the current user from the drop-down list.</p>

<p>The formfield_for_foreignkey help us to filter out other users.</p>

<p>By combining this two function we get:</p>

<p><img src="http://linc01n.github.com/images/created_by.jpg" alt="Created By" /></p>

<p>The last get_readonly_fields function make this field can&#8217;t be edit after the creation.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Synergey Key Mapping Between Mac and Windows]]></title>
    <link href="http://linc01n.github.com/blog/2011/10/03/synergey-key-mapping-between-mac-and-windows/"/>
    <updated>2011-10-03T21:49:00+08:00</updated>
    <id>http://linc01n.github.com/blog/2011/10/03/synergey-key-mapping-between-mac-and-windows</id>
    <content type="html"><![CDATA[<h1>My Brain is going to Explode!</h1>

<p>Synergy is doing a great job about sharing keyboard and mouse between OSes. But when it comes to mac and windows, there are some new problems.</p>

<p>Mac and Windows have different keyboard shortcut. The most confusing shortcut fighting in my head is copy and paste. Synergy support copy and paste between machine which is nice. So I can copy some text from windows and paste them in mac.</p>

<p>Here comes the problem. I control-c in my windows and go to my Mac I hit control-v all the time. This is a vice versa problem. To solve it, I need to map control key to command key.</p>

<p>But setting up keybinding is hard in synergy. It is quite hard to make synergy working between my Mac Lion and Win 7. So I decided not to touch the config file of synergy.</p>

<h1>Solution: KeyRemap4MacBook</h1>

<p>Download from tekezo website: <a href="http://pqrs.org/macosx/keyremap4macbook/index.html">http://pqrs.org/macosx/keyremap4macbook/index.html</a></p>

<p>Direct Link : <a href="http://pqrs.org/macosx/keyremap4macbook/files/KeyRemap4MacBook-7.4.0.pkg.zip">http://pqrs.org/macosx/keyremap4macbook/files/KeyRemap4MacBook-7.4.0.pkg.zip</a></p>

<p>After installing the pkg and reboot, go to System Perferences->KeyRemap4MacBook.</p>

<p>Tick the following combobox:</p>

<ul>
<li>Shift_L to Lazy_Shift_L</li>
<li>Shift_R to Lazy_Shift_R</li>
<li>Option + Tab to Command + Tab</li>
<li>Use PC Style Copy/Paste</li>
<li>Use PC Style Undo</li>
<li>Use PC Style Select All</li>
<li>Use PC Style Save</li>
<li>Use PC Style Find</li>
<li>Use PC Style New Tab in Browser</li>
</ul>


<h1>Done</h1>

<p>Now I can use control-c and control-v in both of my machine. The shortcut won&#8217;t mess up my head anymore. :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Synergy on Mac OSX Lion]]></title>
    <link href="http://linc01n.github.com/blog/2011/09/28/synergy-on-mac-osx-lion/"/>
    <updated>2011-09-28T12:31:00+08:00</updated>
    <id>http://linc01n.github.com/blog/2011/09/28/synergy-on-mac-osx-lion</id>
    <content type="html"><![CDATA[<p><em>Update the QuickSynergy Download link</em></p>

<h1>tl;dr</h1>

<h3>On Mac:</h3>

<p>Download: <a href="http://quicksynergy.googlecode.com/files/QuickSynergy.dmg">QuickSynergy for Mac</a></p>

<p>Setup the Windows Computer name or IP on the display edge in Quick Synergy.</p>

<p>Press Start.</p>

<h3>On Windows:</h3>

<p>Download: <a href="http://synergy.googlecode.com/files/synergy-1.3.7-Windows-x86.exe">Synergy 1.3.7</a></p>

<p>Install it and run it.</p>

<p>Type in the Mac IP in the &#8220;Other Computer&#8217;s Host Name&#8221;</p>

<h3>Done</h3>

<h1>Same mouse and keyboard for Mac and Windows</h1>

<p><a href="http://synergy-foss.org/">Synergy</a> is a software kvm. It can let you share same set of mouse and keyboard between two different computers through TCP/IP.</p>

<h2>Synergy 1.3.7</h2>

<p>I want to setup my Lion as server and Win7 as client. After trying with multiple combination of version and configuration, I found Quick Synergy can at least work.</p>

<p>Problems with 1.4.4 Beta Server on Lion is the keyboard can&#8217;t use the Shift key in Windows machine. Problmes with 1.3.7 Server is that I can make my keyboard work in Windows machine.</p>

<h2>Solutions</h2>

<p>Install Quick Synergy with the above instruction. Simple configuration and save all the hassle.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Enabling NTFS Write Support on Mac OSX Lion]]></title>
    <link href="http://linc01n.github.com/blog/2011/09/25/enabling-ntfs-write-support-on-mac-osx-lion/"/>
    <updated>2011-09-25T22:25:00+08:00</updated>
    <id>http://linc01n.github.com/blog/2011/09/25/enabling-ntfs-write-support-on-mac-osx-lion</id>
    <content type="html"><![CDATA[<h2>Mac OSX Lion weaknesses</h2>

<p>I have just bought my new Macbook Pro and setting it up as my dev box. Mac OSX has out-of-the-box support for NTFS read. If you want to transfer file between OSes you will choose FAT32. But FAT32 has one big problem which is no file can exceed 4GB size limit.</p>

<h2>Setup procedure: fuse4x + ntfs-3g</h2>

<p>Install Xcode 4 from App store <a href="http://itunes.apple.com/app/xcode/id448457090?mt=12">Link</a></p>

<p>After download, Click the &#8220;Install Xcode&#8221; from the Launchpad. (I really don&#8217;t understand why Xcode behave like this when it comes to App Store. : ( )</p>

<p>Then open Terminal:
Press ⌘ + Space then type Terminal</p>

<p>Install Homebrew</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ /usr/bin/ruby -e "$(curl -fsSL https://raw.github.com/gist/323731)"</span></code></pre></td></tr></table></div></figure>


<p>Install fuse4x + ntfs-3g</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ brew install ntfs-3g</span></code></pre></td></tr></table></div></figure>


<p>Load fuse4x kext to kernel</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo cp -rfX /usr/local/Cellar/fuse4x-kext/0.8.12/Library/Extensions/fuse4x.kext /System/Library/Extensions
</span><span class='line'>$ sudo chmod +s /System/Library/Extensions/fuse4x.kext/Support/load_fuse4x</span></code></pre></td></tr></table></div></figure>


<p>Setup Auto-mount</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo mv /sbin/mount_ntfs /sbin/mount_ntfs.orig
</span><span class='line'>$ sudo touch /sbin/mount_ntfs
</span><span class='line'>$ sudo chmod 0775 /sbin/mount_ntfs
</span><span class='line'>$ sudo chown 0:0 /sbin/mount_ntfs
</span><span class='line'>$ sudo nano /sbin/mount_ntfs</span></code></pre></td></tr></table></div></figure>


<p>After the last command, a text editor will open. Paste the following code to the editor.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/bin/bash
</span><span class='line'>
</span><span class='line'>VOLUME_NAME="${@:$#}"
</span><span class='line'>VOLUME_NAME=${VOLUME_NAME#/Volumes/}
</span><span class='line'>USER_ID=501
</span><span class='line'>GROUP_ID=20
</span><span class='line'>TIMEOUT=20
</span><span class='line'>
</span><span class='line'>if [ `/usr/bin/stat -f "%u" /dev/console` -eq 0 ]; then
</span><span class='line'>        USERNAME=`/usr/bin/defaults read /library/preferences/com.apple.loginwindow | /usr/bin/grep autoLoginUser | /usr/bin/awk '{ print $3 }' | /usr/bin/sed 's/;//'`
</span><span class='line'>        if [ "$USERNAME" = "" ]; then
</span><span class='line'>                until [ `stat -f "%u" /dev/console` -ne 0 ] || [ $TIMEOUT -eq 0 ]; do
</span><span class='line'>                        sleep 1
</span><span class='line'>                        let TIMEOUT--
</span><span class='line'>                done
</span><span class='line'>                if [ $TIMEOUT -ne 0 ]; then
</span><span class='line'>                        USER_ID=`/usr/bin/stat -f "%u" /dev/console`
</span><span class='line'>                        GROUP_ID=`/usr/bin/stat -f "%g" /dev/console`
</span><span class='line'>                fi
</span><span class='line'>        else
</span><span class='line'>                USER_ID=`/usr/bin/id -u $USERNAME`
</span><span class='line'>                GROUP_ID=`/usr/bin/id -g $USERNAME`
</span><span class='line'>        fi
</span><span class='line'>else
</span><span class='line'>        USER_ID=`/usr/bin/stat -f "%u" /dev/console`
</span><span class='line'>        GROUP_ID=`/usr/bin/stat -f "%g" /dev/console`
</span><span class='line'>fi
</span><span class='line'>
</span><span class='line'>/usr/local/bin/ntfs-3g \
</span><span class='line'>        -o volname="${VOLUME_NAME}" \
</span><span class='line'>        -o local \
</span><span class='line'>        -o noappledouble \
</span><span class='line'>        -o negative_vncache \
</span><span class='line'>        -o auto_xattr \
</span><span class='line'>        -o auto_cache \
</span><span class='line'>        -o noatime \
</span><span class='line'>        -o windows_names \
</span><span class='line'>        -o user_xattr \
</span><span class='line'>        -o inherit \
</span><span class='line'>        -o uid=$USER_ID \
</span><span class='line'>        -o gid=$GROUP_ID \
</span><span class='line'>        -o allow_other \
</span><span class='line'>        "$@" &&gt; /var/log/ntfsmnt.log
</span><span class='line'>
</span><span class='line'>exit $?;</span></code></pre></td></tr></table></div></figure>


<p>The USER_ID should be 501 if you are the only user of your machine. or you can update the USER_ID and GROUP_ID by typing this to check your user and group</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ id -u && id -g</span></code></pre></td></tr></table></div></figure>


<p>which the first line is user id, second line is group id.</p>

<p><em>source: <a href="http://fernandoff.posterous.com/ntfs-write-support-on-osx-lion-with-ntfs-3g-f">fernando&#8217;s blog</a> (I edit the path of ntfs-3g since we install in Homebrew)</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Readable Code]]></title>
    <link href="http://linc01n.github.com/blog/2011/09/07/readable-code/"/>
    <updated>2011-09-07T22:29:00+08:00</updated>
    <id>http://linc01n.github.com/blog/2011/09/07/readable-code</id>
    <content type="html"><![CDATA[<h1>Clean Code</h1>

<p>I have graduated from college this June. The culture in my college is you do all group projects by youself. So collaboration is some what new to me.</p>

<p>I started working in a web company after my graduation. After two months of non-stop coding day and night, I learnt a few things about coding.</p>

<p>This time I will talk about coding practice.</p>

<h2>Background</h2>

<p>The project I invovled was a CMS-like Web Site Builder. The whole team had 4 coders. We used SVN as a version control tools for collaboration. A PHP MVC framework is used in developing the project(God bless :) ).</p>

<h2>Coding Practice</h2>

<p>Assignment or functions call can tightly packed:</p>

<pre><code>a = 1;
foo();
bar();
</code></pre>

<p>Loop should wrap with newline</p>

<pre><code>foo();

if(bar){
  a = 1;
}

foo();

for($i = 0; $i &lt; 10; $i++){

  if(bar){
    exit();
  }

}

exit();
</code></pre>

<h2>Conclusion</h2>

<p>I always think coding practice is not a very important thing in development. But after I worked with a project that contains 30K LOC, I understand this kind of agreement can help with code maintenance and easier for debugging.</p>
]]></content>
  </entry>
  
</feed>
