<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ruby | Coding, Coding, Coding]]></title>
  <link href="http://linc01n.github.io/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://linc01n.github.io/"/>
  <updated>2013-10-12T23:42:29+08:00</updated>
  <id>http://linc01n.github.io/</id>
  <author>
    <name><![CDATA[Lincoln Lee]]></name>
    <email><![CDATA[git@lincoln.hk]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using gruff graphing library]]></title>
    <link href="http://linc01n.github.io/blog/2013/10/08/using-gruff-graphing-library/"/>
    <updated>2013-10-08T22:09:00+08:00</updated>
    <id>http://linc01n.github.io/blog/2013/10/08/using-gruff-graphing-library</id>
    <content type="html"><![CDATA[<h3>Requirement</h3>

<p>I played around with <a href="https://github.com/topfunky/gruff">gruff</a> today. The final result is really impressive. Especially it can visualize data from your database in the way you want.</p>

<p>Before you install this gem. You need to install few extra things. They are <a href="http://www.imagemagick.org/script/index.php">imagemagick</a>, <a href="http://www.ghostscript.com/">ghostscript</a>. On Mac OSX you need to do</p>

<p><code>brew install imagemagick ghostscript</code></p>

<p>After installing both packages, you can run <code>bundle install</code></p>

<h3>Usage</h3>

<p>To generate a graph you need to</p>

<p>```ruby
require "gruff"
require "date"</p>

<h1>Create the graph object</h1>

<p>g = Gruff::Line.new</p>

<h1>Set the title</h1>

<p>g.title = "My First Graph"</p>

<h1>Let say we have a data hash</h1>

<h1>The element is like {Date => Integer}</h1>

<p>today     = Date.today
yesterday = Date.today.prev_day</p>

<p>data = { yesterday => 100, today => 200}</p>

<h1>We need to set the x-axis labels</h1>

<h1>It need to be a Hash { 0 => "name 1", 1 => "name 2", â€¦ }</h1>

<h1>We need to do a little bit of data transform here.</h1>

<p>g.labels = Hash[(0...data.keys.size).zip data.keys.map{|day| day.strftime("%d %b")}] # => {0=>"07 Oct", 1=>"08 Oct"}</p>

<h1>Then we need to set the y-axis, we need to give it a name</h1>

<p>g.data :Price, data.values</p>

<h1>Write the generated graph to a file</h1>

<p>g.write "gruff.png"
```</p>

<p>This is the generated graph:</p>

<p><img src="/images/gruff.png" alt="Generated Graph" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Parallels Desktop as Vagrant Provider]]></title>
    <link href="http://linc01n.github.io/blog/2013/10/05/using-parallels-desktop-as-vagrant-provider/"/>
    <updated>2013-10-05T21:40:00+08:00</updated>
    <id>http://linc01n.github.io/blog/2013/10/05/using-parallels-desktop-as-vagrant-provider</id>
    <content type="html"><![CDATA[<h3>Vagrant is great!</h3>

<h4>What is vagrant?</h4>

<p><a href="http://www.vagrantup.com/">Vagrant</a> provides easy to configure, reproducible, and portable work environments. In other words, It creates a VM for development.</p>

<p>I use vagrant to do my development in the past year. Slowly learning all the pros and cons of vagrant when using it for development. Vagrant use VirtualBox as a VM host. There is a problem about the license of the guest addition of VirtualBox. If I want to use it commercially I need to purchase a license from Oracle(USD50 for 100 end users). Problem is 100 licenses min buy.</p>

<h4>Vagrant can use VMWare as a host</h4>

<p>Later version of vagrant abstract the VM provider as a provider plugin. This open the possibility to support other hypervisor.</p>

<h3>I own a Parallels Desktop 8 license</h3>

<p>It would be great if I can use PD8 as my vagrant host. Now the dream came true. <a href="https://github.com/yshahin/vagrant-parallels">https://github.com/yshahin/vagrant-parallels</a>. Vagrant Parallels plugin!</p>

<p>I tested it for almost 2 days. Everything works fine. I can do <code>vagrant ssh</code> <code>vagrant up</code> <code>vagrant halt</code>.</p>

<p>The site provide one box for you to use. The box for vagrant-paralles is a bit special. I want Ubuntu 12.04.3 LTS for one of my project. So I decided to build the box myself.</p>

<h3>Veewee easy way to build vagrant box</h3>

<p><a href="https://github.com/jedi4ever/veewee">Veewee</a> is a tool for easily (and repeatedly) building custom Vagrant base boxes, KVMs, and virtual machine images.</p>

<p>Veewee supports parallels export 15 days ago. It got almost all the common linux distribution.</p>

<h3>Building my own parallels box is not that easy</h3>

<p>First, you need to install the parallels SDK for python. If you are using homebrew version of python you need to symlink the SDK separately.</p>

<p><code>ln -s /Library/Frameworks/ParallelsVirtualizationSDK.framework/Libraries/Python/2.7/prlsdkapi /usr/local/lib/python2.7/site-packages/</code></p>

<p>Then you need to create a definition for the box. I use</p>

<p><code>veewee parallels define 'ubuntu-12.04-lts' 'ubuntu-12.04.3-server-amd64'</code></p>

<p>In the definition directory edit the <em>definitions.rb</em> file. Remove virtualbox and vmware. We don't need those since we are creating for PD.</p>

<p>Let's build the box with</p>

<p><code>veewee parallels build 'ubuntu-12.04-lts' --workdir=/path/to/wd</code></p>

<p>Wait a while the os is installing. Here comes with a gotcha. If you get stuck in install grub-pc, you need to reboot you mac. I don't know why but it works. I also found we cannot do unattended install of Parallels tools. After the build is complete, do not shutdown the instance. Install the tools using ssh with vagrant/vagrant login.</p>

<p>The last step of creating the box is</p>

<p><code>veewee parallels export 'ubuntu-1204-lts' --workdir=/path/to/wd</code></p>

<h3>Vagrant up</h3>

<p>So after importing the box, created the new Vagrantfile. We can start the vagrant box.</p>

<p><code>vagrant up --provider=paralles</code></p>

<p>Use the provider flag on the first time boot.</p>

<h3>Everything is just like VirtualBox</h3>

<p>The networking config in Vagrantfile seems still not support. But this plugin is only 0.0.4. We will see.</p>
]]></content>
  </entry>
  
</feed>
