<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: development | Coding, Coding, Coding]]></title>
  <link href="http://linc01n.github.io/blog/categories/development/atom.xml" rel="self"/>
  <link href="http://linc01n.github.io/"/>
  <updated>2014-12-14T20:10:27+08:00</updated>
  <id>http://linc01n.github.io/</id>
  <author>
    <name><![CDATA[Lincoln Lee]]></name>
    <email><![CDATA[git@lincoln.hk]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using gruff graphing library]]></title>
    <link href="http://linc01n.github.io/blog/2013/10/08/using-gruff-graphing-library/"/>
    <updated>2013-10-08T22:09:00+08:00</updated>
    <id>http://linc01n.github.io/blog/2013/10/08/using-gruff-graphing-library</id>
    <content type="html"><![CDATA[<h3>Requirement</h3>

<p>I played around with <a href="https://github.com/topfunky/gruff">gruff</a> today. The final result is really impressive. Especially it can visualize data from your database in the way you want.</p>

<p>Before you install this gem. You need to install few extra things. They are <a href="http://www.imagemagick.org/script/index.php">imagemagick</a>, <a href="http://www.ghostscript.com/">ghostscript</a>. On Mac OSX you need to do</p>

<p><code>brew install imagemagick ghostscript</code></p>

<p>After installing both packages, you can run <code>bundle install</code></p>

<h3>Usage</h3>

<p>To generate a graph you need to</p>

<pre><code class="ruby">require "gruff"
require "date"

# Create the graph object
g = Gruff::Line.new

# Set the title
g.title = "My First Graph"

# Let say we have a data hash
# The element is like {Date =&gt; Integer}

today     = Date.today
yesterday = Date.today.prev_day


data = { yesterday =&gt; 100, today =&gt; 200}

# We need to set the x-axis labels
# It need to be a Hash { 0 =&gt; "name 1", 1 =&gt; "name 2", â€¦ }
# We need to do a little bit of data transform here.
g.labels = Hash[(0...data.keys.size).zip data.keys.map{|day| day.strftime("%d %b")}] # =&gt; {0=&gt;"07 Oct", 1=&gt;"08 Oct"}

# Then we need to set the y-axis, we need to give it a name
g.data :Price, data.values

# Write the generated graph to a file
g.write "gruff.png"
</code></pre>

<p>This is the generated graph:</p>

<p><img src="/images/gruff.png" alt="Generated Graph" /></p>
]]></content>
  </entry>
  
</feed>
