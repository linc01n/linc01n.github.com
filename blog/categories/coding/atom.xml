<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: coding | Coding, Coding, Coding]]></title>
  <link href="http://linc01n.github.io/blog/categories/coding/atom.xml" rel="self"/>
  <link href="http://linc01n.github.io/"/>
  <updated>2014-12-14T20:10:27+08:00</updated>
  <id>http://linc01n.github.io/</id>
  <author>
    <name><![CDATA[Lincoln Lee]]></name>
    <email><![CDATA[git@lincoln.hk]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using Parallels Desktop as Vagrant Provider]]></title>
    <link href="http://linc01n.github.io/blog/2013/10/05/using-parallels-desktop-as-vagrant-provider/"/>
    <updated>2013-10-05T21:40:00+08:00</updated>
    <id>http://linc01n.github.io/blog/2013/10/05/using-parallels-desktop-as-vagrant-provider</id>
    <content type="html"><![CDATA[<h3>Vagrant is great!</h3>

<h4>What is vagrant?</h4>

<p><a href="http://www.vagrantup.com/">Vagrant</a> provides easy to configure, reproducible, and portable work environments. In other words, It creates a VM for development.</p>

<p>I use vagrant to do my development in the past year. Slowly learning all the pros and cons of vagrant when using it for development. Vagrant use VirtualBox as a VM host. There is a problem about the license of the guest addition of VirtualBox. If I want to use it commercially I need to purchase a license from Oracle(USD50 for 100 end users). Problem is 100 licenses min buy.</p>

<h4>Vagrant can use VMWare as a host</h4>

<p>Later version of vagrant abstract the VM provider as a provider plugin. This open the possibility to support other hypervisor.</p>

<h3>I own a Parallels Desktop 8 license</h3>

<p>It would be great if I can use PD8 as my vagrant host. Now the dream came true. <a href="https://github.com/yshahin/vagrant-parallels">https://github.com/yshahin/vagrant-parallels</a>. Vagrant Parallels plugin!</p>

<p>I tested it for almost 2 days. Everything works fine. I can do <code>vagrant ssh</code> <code>vagrant up</code> <code>vagrant halt</code>.</p>

<p>The site provide one box for you to use. The box for vagrant-paralles is a bit special. I want Ubuntu 12.04.3 LTS for one of my project. So I decided to build the box myself.</p>

<h3>Veewee easy way to build vagrant box</h3>

<p><a href="https://github.com/jedi4ever/veewee">Veewee</a> is a tool for easily (and repeatedly) building custom Vagrant base boxes, KVMs, and virtual machine images.</p>

<p>Veewee supports parallels export 15 days ago. It got almost all the common linux distribution.</p>

<h3>Building my own parallels box is not that easy</h3>

<p>First, you need to install the parallels SDK for python. If you are using homebrew version of python you need to symlink the SDK separately.</p>

<p><code>ln -s /Library/Frameworks/ParallelsVirtualizationSDK.framework/Libraries/Python/2.7/prlsdkapi /usr/local/lib/python2.7/site-packages/</code></p>

<p>Then you need to create a definition for the box. I use</p>

<p><code>veewee parallels define 'ubuntu-12.04-lts' 'ubuntu-12.04.3-server-amd64'</code></p>

<p>In the definition directory edit the <em>definitions.rb</em> file. Remove virtualbox and vmware. We don&rsquo;t need those since we are creating for PD.</p>

<p>Let&rsquo;s build the box with</p>

<p><code>veewee parallels build 'ubuntu-12.04-lts' --workdir=/path/to/wd</code></p>

<p>Wait a while the os is installing. Here comes with a gotcha. If you get stuck in install grub-pc, you need to reboot you mac. I don&rsquo;t know why but it works. I also found we cannot do unattended install of Parallels tools. After the build is complete, do not shutdown the instance. Install the tools using ssh with vagrant/vagrant login.</p>

<p>The last step of creating the box is</p>

<p><code>veewee parallels export 'ubuntu-1204-lts' --workdir=/path/to/wd</code></p>

<h3>Vagrant up</h3>

<p>So after importing the box, created the new Vagrantfile. We can start the vagrant box.</p>

<p><code>vagrant up --provider=paralles</code></p>

<p>Use the provider flag on the first time boot.</p>

<h3>Everything is just like VirtualBox</h3>

<p>The networking config in Vagrantfile seems still not support. But this plugin is only 0.0.4. We will see.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Django Admin: Auto Select Current User]]></title>
    <link href="http://linc01n.github.io/blog/2011/10/18/django-admin-auto-select-current-user/"/>
    <updated>2011-10-18T17:38:00+08:00</updated>
    <id>http://linc01n.github.io/blog/2011/10/18/django-admin-auto-select-current-user</id>
    <content type="html"><![CDATA[<h2>Background</h2>

<p>There are often times in developing a CMS need to mark down who created the record. Django provide a nice admin interface for us. But when we only use the default, user need to select who they are by themselves. We want to auto select for them and they can&rsquo;t pretend to be others.</p>

<h2>code</h2>

<p>In the django models.py, we have the following:</p>

<p><figure class='code'><figcaption><span>models.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">class</span> <span class="nc">Notes</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
</span><span class='line'>    <span class="n">title</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">255</span><span class="p">)</span>
</span><span class='line'>    <span class="n">content</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">TextField</span><span class="p">()</span>
</span><span class='line'>    <span class="n">date</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateField</span><span class="p">()</span>
</span><span class='line'>    <span class="n">created_by</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="n">User</span><span class="p">,</span> <span class="n">related_name</span><span class="o">=&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Created</span> <span class="n">By</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>We want the created_by to be set automatically for the logged in user.</p>

<p>So in our admin:
<figure class='code'><figcaption><span>admin </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">class</span> <span class="nc">NotesAdmin</span><span class="p">(</span><span class="n">admin</span><span class="o">.</span><span class="n">ModelAdmin</span><span class="p">):</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">formfield_for_foreignkey</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">db_field</span><span class="p">,</span> <span class="n">request</span><span class="p">,</span> <span class="o">&lt;</span><span class="n">strong</span><span class="o">&gt;</span><span class="n">kwargs</span><span class="p">):</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">db_field</span><span class="o">.</span><span class="n">name</span> <span class="o">==</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">created_by</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;:</span>
</span><span class='line'>            <span class="n">kwargs</span><span class="p">[</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">queryset</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;]</span> <span class="o">=</span> <span class="n">User</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">filter</span><span class="p">(</span><span class="n">username</span><span class="o">=</span><span class="n">request</span><span class="o">.</span><span class="n">user</span><span class="o">.</span><span class="n">username</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span> <span class="nb">super</span><span class="p">(</span><span class="n">NotesAdmin</span><span class="p">,</span> <span class="bp">self</span><span class="p">)</span><span class="o">.</span><span class="n">formfield_for_foreignkey</span><span class="p">(</span><span class="n">db_field</span><span class="p">,</span> <span class="n">request</span><span class="p">,</span> <span class="o">&lt;/</span><span class="n">strong</span><span class="o">&gt;</span><span class="n">kwargs</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">get_readonly_fields</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">request</span><span class="p">,</span> <span class="n">obj</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">obj</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
</span><span class='line'>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">readonly_fields</span> <span class="o">+</span> <span class="p">(</span><span class="s">&#39;created_by&#39;</span><span class="p">,)</span>
</span><span class='line'>    <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">readonly_fields</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">add_view</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">request</span><span class="p">,</span> <span class="n">form_url</span><span class="o">=</span><span class="s">&quot;&quot;</span><span class="p">,</span> <span class="n">extra_context</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
</span><span class='line'>    <span class="n">data</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">GET</span><span class="o">.</span><span class="n">copy</span><span class="p">()</span>
</span><span class='line'>    <span class="n">data</span><span class="p">[</span><span class="s">&#39;created_by&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">user</span>
</span><span class='line'>    <span class="n">request</span><span class="o">.</span><span class="n">GET</span> <span class="o">=</span> <span class="n">data</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">super</span><span class="p">(</span><span class="n">NotesAdmin</span><span class="p">,</span> <span class="bp">self</span><span class="p">)</span><span class="o">.</span><span class="n">add_view</span><span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="n">form_url</span><span class="o">=</span><span class="s">&quot;&quot;</span><span class="p">,</span> <span class="n">extra_context</span><span class="o">=</span><span class="n">extra_context</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">admin</span><span class="o">.</span><span class="n">site</span><span class="o">.</span><span class="n">register</span><span class="p">(</span><span class="n">Notes</span><span class="p">,</span> <span class="n">NotesAdmin</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></p>

<h2>explanation</h2>

<p>The add_view function help us to select the current user from the drop-down list.</p>

<p>The formfield_for_foreignkey help us to filter out other users.</p>

<p>By combining this two function we get:</p>

<p><img src="/images/created_by.jpg" alt="Created By" /></p>

<p>The last get_readonly_fields function make this field can&rsquo;t be edit after the creation.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Readable Code]]></title>
    <link href="http://linc01n.github.io/blog/2011/09/07/readable-code/"/>
    <updated>2011-09-07T22:29:00+08:00</updated>
    <id>http://linc01n.github.io/blog/2011/09/07/readable-code</id>
    <content type="html"><![CDATA[<h1>Clean Code</h1>

<p>I have graduated from college this June. The culture in my college is you do all group projects by youself. So collaboration is some what new to me.</p>

<p>I started working in a web company after my graduation. After two months of non-stop coding day and night, I learnt a few things about coding.</p>

<p>This time I will talk about coding practice.</p>

<h2>Background</h2>

<p>The project I invovled was a CMS-like Web Site Builder. The whole team had 4 coders. We used SVN as a version control tools for collaboration. A PHP MVC framework is used in developing the project(God bless :) ).</p>

<h2>Coding Practice</h2>

<p>Assignment or functions call can tightly packed:</p>

<pre><code>a = 1;
foo();
bar();
</code></pre>

<p>Loop should wrap with newline</p>

<pre><code>foo();

if(bar){
  a = 1;
}

foo();

for($i = 0; $i &lt; 10; $i++){

  if(bar){
    exit();
  }

}

exit();
</code></pre>

<h2>Conclusion</h2>

<p>I always think coding practice is not a very important thing in development. But after I worked with a project that contains 30K LOC, I understand this kind of agreement can help with code maintenance and easier for debugging.</p>
]]></content>
  </entry>
  
</feed>
